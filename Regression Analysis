## Multiple Regression Analysis 2024
## Max Gebhart

# Example from https://bioinformatics-core-shared-training.github.io/linear-models-r/multiple_regression.html#Section_1:_Multiple_Regression
plot(trees)
m1 = lm(Volume ~ Girth, data= trees)
summary(m1)
plot(m1)

## My data will be looking at biomass variables compared to air temp, water depth, and year
## I'll integrate water temperature for the sites that have completed water temp datasets
# First load data
setwd("~/Work/Writing/Manuscripts/2023/FloweringRush")
Al <- read.csv("All Frush Data.csv")
MM <- read.csv("MM FRush Data.csv")
TON <- read.csv("TON FRush Data.csv")
UI <- read.csv("UI FRush data.csv")


## I have to coerce my data into only being numeric since decimals were used as blank placeholders in my case
## double check all data is kept as numerics
Al <- data.frame(sapply(Al, function(x) as.numeric(as.character(x))))
MM <- data.frame(sapply(MM, function(x) as.numeric(as.character(x))))
TON <- data.frame(sapply(TON, function(x) as.numeric(as.character(x))))
UI <- data.frame(sapply(UI, function(x) as.numeric(as.character(x))))


# This is a test regression for organizing how to grab all the necessary values
###### 
test <- lm(formula = A ~ WD, data = MM)
summary(test)
#####

## Ok so we have the basics of what we need for this so now we want to make a function that can slam through all the regressions
### This loop will essentially create a data frame that will harbor all of the end results from the analyses
### I suggest after you have all the analyses done that you randomly select a few and double check the values
### They should all be accurate but better safe than sorry
## REMINDER CHANGE FILE NAME FOR DATASET


{
  names <-list(c("A", "BG", "F", "RB", "Total", "BD", "Ram", "AS", "BS", "FS", "RBS", "PH"), c("ATP", "ATeq", "ATR", "WTP", "WTeq", "WTR", "WDP", "WDeq", "WDR" ))
  LRoutput <- data.frame(matrix(nrow = 12, ncol = 9, dimnames = names))
for (i in 1:12){
  flow <- list(A, BG, FL, RB, Total, BD, Ram, AS, BS, FS, RBS, PH)
  r <- i
  vari <- flow[[i]]
  at <- lm(vari ~ AT)
  wt <- lm(vari ~ WT)
  wd <- lm(vari ~ WD)
  
  LRoutput[r, 1] <- signif(anova(at)$'Pr(>F)'[1], 4)
  int <- signif(at[["coefficients"]][["(Intercept)"]], 4)
  mult <- signif(at[["coefficients"]][["AT"]],4)
  one <- paste(mult, "x", sep ="")
  equation <- paste(one, int)
  LRoutput[r, 2] <- equation
  LRoutput[r, 3] <- signif(summary(at)$r.squared, 4)
  
  LRoutput[r, 4] <- signif(anova(wt)$'Pr(>F)'[1], 4)
  int <- signif(wt[["coefficients"]][["(Intercept)"]], 4)
  mult <- signif(wt[["coefficients"]][["WT"]], 4)
  one <- paste(mult, "x", sep ="")
  equation <- paste(one, int)
  LRoutput[r, 5] <- equation
  LRoutput[r, 6] <- signif(summary(wt)$r.squared, 4)
  
  LRoutput[r, 7] <- signif(anova(wd)$'Pr(>F)'[1], 4)
  int <- signif(wd[["coefficients"]][["(Intercept)"]], 4)
  mult <- signif(wd[["coefficients"]][["WD"]], 4)
  one <- paste(mult, "x", sep ="")
  equation <- paste(one, int)
  LRoutput[r, 8] <- equation
  LRoutput[r, 9] <- signif(summary(wd)$r.squared, 4)
}
  print(LRoutput)
  
}

{
  names <-list(c("A", "BG", "F", "RB", "Total", "BD", "Ram", "AS", "BS", "FS", "RBS", "PH"), c("ATP", "ATeq", "ATR", "WTP", "WTeq", "WTR", "WDP", "WDeq", "WDR" ))
  LRoutput <- data.frame(matrix(nrow = 12, ncol = 9, dimnames = names))
  for (i in 1:12){
    flow <- list(A, BG, FL, RB, Total, BD, Ram, AS, BS, FS, RBS, PH)
    r <- i
    vari <- flow[[i]]
    at <- lm(vari ~ AT + I(AT^2))
    wt <- lm(vari ~ WT + I(WT^2))
    wd <- lm(vari ~ WD + I(WD^2))
    { 
    LRoutput[r, 1] <- signif(pf(summary(at)$fstatistic[1], summary(at)$fstatistic[2], summary(at)$fstatistic[3], lower.tail = FALSE), 4)
    square <- signif(at[["coefficients"]][["I(AT^2)"]], 4)
    int <- signif(at[["coefficients"]][["(Intercept)"]], 4)
    mult <- signif(at[["coefficients"]][["AT"]],4)
    square <- paste(square, "x2", sep = "")
    one <- paste(mult, "x", sep ="")
    equation <- paste(square, one, int)
    LRoutput[r, 2] <- equation
    LRoutput[r, 3] <- signif(summary(at)$r.squared, 4)
    
    LRoutput[r, 4] <- signif(pf(summary(wt)$fstatistic[1], summary(wt)$fstatistic[2], summary(wt)$fstatistic[3], lower.tail = FALSE), 4)
    square <- signif(wt[["coefficients"]][["I(WT^2)"]], 4)
    int <- signif(wt[["coefficients"]][["(Intercept)"]], 4)
    mult <- signif(wt[["coefficients"]][["WT"]], 4)
    square <- paste(square, "x2", sep = "")
    one <- paste(mult, "x", sep ="")
    equation <- paste(square, one, int)
    LRoutput[r, 5] <- equation
    LRoutput[r, 6] <- signif(summary(wt)$r.squared, 4)
    
    LRoutput[r, 7] <- signif(pf(summary(wd)$fstatistic[1], summary(wd)$fstatistic[2], summary(wd)$fstatistic[3], lower.tail = FALSE), 4)
    square <- signif(wd[["coefficients"]][["I(WD^2)"]], 4)
    int <- signif(wd[["coefficients"]][["(Intercept)"]], 4)
    mult <- signif(wd[["coefficients"]][["WD"]], 4)
    square <- paste(square, "x2", sep = "")
    one <- paste(mult, "x", sep ="")
    equation <- paste(square, one, int)
    LRoutput[r, 8] <- equation
    LRoutput[r, 9] <- signif(summary(wd)$r.squared, 4)
  }  
    }
    print(LRoutput)
}



